version: "3.7"
services:

    webapi_service:
        image: localhost:5000/webapi-service:latest
        build:
          context: .
          dockerfile: ./backend/src/Megarender.AppServices/Megarender.WebAPIService/Dockerfile        
        container_name: webapi_service
        restart: unless-stopped
        expose:
          - 80
        environment: 
          DB_HOST: "db"
          DB_PORT: "5432"
          DB_USER_FILE: "~/secrets/API_DB_USER"
          DB_PWD_FILE: "~/secrets/API_DB_PASSWORD"
          PIS_HOST: "identity_service"
          PIS_PORT: "80"
          RMQ_USER_FILE: "~/secrets/RMQ_USER"
          RMQ_PWD_FILE: "~/secrets/RMQ_PASSWORD"
          RMQ_HOST: "rabbitmq"
          RMQ_PORT: "5672"
          ASPNETCORE_ENVIRONMENT: "Production"
          SeqURL: "http://seq:5341"
          PIS_HOST_EXT: "localhost"
          PIS_PORT_EXT: "5000"
        depends_on:    
          -  identity_service  
          # -  rabbitmq  
          # -  seq
          
          
    identity_service:
        image: localhost:5000/identity-service:latest
        build:
          context: .
          dockerfile: ./backend/src/Megarender.AppServices/Megarender.IdentityService/Dockerfile        
        container_name: identity_service
        restart: unless-stopped
        expose:
          - 80
        environment: 
          DB_HOST: "db"
          DB_PORT: "5432"
          DB_USER_FILE: "~/secrets/IS_DB_USER"
          DB_PWD_FILE: "~/secrets/IS_DB_PASSWORD"
          ASPNETCORE_ENVIRONMENT: "Production"
          Serilog__WriteTo__2__Args__serverUrl: "http://seq:5341"
        depends_on:
          -  db  


    storage_service:
        image: localhost:5000/storage-service:latest
        build:
          context: .
          dockerfile: ./backend/src/Megarender.AppServices/Megarender.StorageService/Dockerfile        
        container_name: storage_service
        restart: unless-stopped
        expose:
          - 80
        environment: 
          DB_HOST: "db"
          DB_PORT: "5432"
          DB_USER_FILE: "~/secrets/STORAGE_DB_USER"
          DB_PWD_FILE: "~/secrets/STORAGE_DB_PASSWORD"
          ASPNETCORE_ENVIRONMENT: "Production"         
          SeqURL: "http://seq:5341"
          AZURE_STORAGE: "~/secrets/AZURE_STORAGE_CONNECTIONSTRING"
          PIS_HOST_EXT: "localhost"
          PIS_PORT_EXT: "5000"
          PIS_HOST: "identity_service"
          PIS_PORT: "80"
        depends_on:
          -  identity_service    


    db:
        image: localhost:5000/db:latest
        build:
          context: .
          dockerfile: ./third-party-images/DB
        volumes: 
          - pg_data:/var/lib/postgresql/data        
        ports: 
          - 5432:5432
        container_name: db
        restart: unless-stopped
        environment:
            PGDATA: "/var/lib/postgresql/data/pgdata"
            POSTGRES_PASSWORD_FILE: "~/secrets/DB_PASSWORD"
            POSTGRES_USER_FILE: "~/secrets/DB_USER"

    
    # rabbitmq:
    #     build:
    #       context: .
    #       dockerfile: ./third-party-images/RabbitMQ
    #     container_name: rabbitmq
    #     restart: unless-stopped
    #     environment: 
    #       RABBITMQ_DEFAULT_USER_FILE: "~/secrets/RMQ_USER"
    #       RABBITMQ_DEFAULT_PASS_FILE: "~/secrets/RMQ_PASSWORD"
    #     healthcheck:
    #       test: ["CMD", "curl", "-f", "http://localhost:15672"]
    #       interval: 30s
    #       timeout: 10s
    #       retries: 5
    #     volumes:
    #         - rmq_etc:/etc/rabbitmq/
    #         - rmq_data:/var/lib/rabbitmq/
    #         - rmq_logs:/var/log/rabbitmq/
    #     expose:
    #       - 4369
    #       - 5671
    #       - 5672
    #       - 25672
    #       - 15671
    #     ports:            
    #         - 15672:15672
    #         - 5672:5672


    # notification_worker:
    #     build:
    #       context: .
    #       dockerfile: ./backend/src/Megarender.AppServices/Megarender.WorkerServices/Megarender.NotificationWorkerService/Dockerfile        
    #     container_name: notification_worker
    #     restart: unless-stopped
    #     environment: 
    #       RMQ_USER_FILE: "~/secrets/RMQ_USER"
    #       RMQ_PWD_FILE: "~/secrets/RMQ_PASSWORD"
    #       RMQ_HOST: "rabbitmq"
    #       RMQ_PORT: "5672"
    #       DOTNET_ENVIRONMENT: "Production"
    #     depends_on:    
    #       -  rabbitmq  
          

    # seq:
    #  image: datalust/seq
    #  container_name: seq
    #  restart: unless-stopped
    #  expose: 
    #   - 5341
    #  ports:
    #   - 5340:80
    #  environment: 
    #   ACCEPT_EULA: Y
    #  volumes: 
    #   - seq_data:/data


    # prometheus:
    #   image: prom/prometheus
    #   container_name: prometheus
    #   restart: unless-stopped
    #   ports:
    #     - 9090:9090
    #   volumes:
    #     - ./third-party-images/prometheus.yml:/etc/prometheus/prometheus.yml:ro


    # grafana: 
    #   image: grafana/grafana      
    #   environment:
    #     GF_SECURITY_ADMIN_PASSWORD: "~/secrets/GRAFANA_PASSWORD"
    #   container_name: grafana
    #   restart: unless-stopped
    #   ports:
    #     - 3000:3000
    #   volumes: 
    #     - grafana-storage:/var/lib/grafana grafana/grafana

    angular:
      image: localhost:5000/angular:latest
      build:
        context: .
        dockerfile: ./clients/angular/Dockerfile        
      container_name: angular
      restart: unless-stopped
      ports:
        - 8888:80
      environment: 
        API_URI: "http://localhost:5002/api"
        IS_URI:  "http://localhost:5000"
        STORAGE_URI:  "http://localhost:5004/api"
      depends_on:        
        - identity_nginx
        - webapi_nginx   
        - storage_nginx


    webapi_nginx:
      build: 
        context: .
        dockerfile: ./backend/src/Megarender.AppServices/Megarender.WebAPIService/nginx/Dockerfile
      container_name: webapi_nginx
      restart: unless-stopped
      ports:
        - 5002:8989
      depends_on: 
        - webapi_service
    

    identity_nginx:
      build: 
        context: .
        dockerfile: ./backend/src/Megarender.AppServices/Megarender.IdentityService/nginx/Dockerfile
      container_name: identity_nginx
      restart: unless-stopped
      ports:
        - 5000:8989
      depends_on: 
        - identity_service

    storage_nginx:
      build: 
        context: .
        dockerfile: ./backend/src/Megarender.AppServices/Megarender.StorageService/nginx/Dockerfile
      container_name: storage_nginx
      restart: unless-stopped
      ports:
        - 5004:8989
      depends_on: 
        - storage_service

    # reverse_proxy:
    #   build: 
    #     context: .
    #     dockerfile: ./third-party-images/reverse-proxy/Dockerfile
    #   container_name: reverse_proxy
    #   restart: unless-stopped
    #   ports:
    #     - 8000:8989
    #   depends_on: 
    #     - identity_nginx
    #     - webapi_nginx
    #     - storage_nginx
    #     - angular
      
  
volumes: 
  pg_data:
  # rmq_etc:
  # rmq_data:
  # rmq_logs:
  # seq_data:
  # grafana-storage:


