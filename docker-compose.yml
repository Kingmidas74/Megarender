version: "3.7"
services:

    management-service:
        image: localhost:5000/management-service:latest
        build:
          context: .
          dockerfile: ./backend/src/Megarender.AppServices/Megarender.ManagementService/Dockerfile        
        container_name: management-service
        restart: unless-stopped
        expose:
          - 80
        environment: 
          DB_HOST: "db"
          DB_PORT: "5432"
          DB_USER_FILE: "~/secrets/API_DB_USER"
          DB_PWD_FILE: "~/secrets/API_DB_PASSWORD"
          PIS_HOST: "identity-service"
          PIS_PORT: "80"
          RMQ_USER_FILE: "~/secrets/RMQ_USER"
          RMQ_PWD_FILE: "~/secrets/RMQ_PASSWORD"
          RMQ_HOST: "rabbitmq"
          RMQ_PORT: "5672"
          ASPNETCORE_ENVIRONMENT: "Development"
          SeqURL: "http://seq:5341"
          PIS_HOST_EXT: "localhost"
          PIS_PORT_EXT: "5000"
          REDIS_HOST: "redis"
          REDIS_PORT: "6379"
        depends_on:    
          -  identity-service
          # -  redis  
          # -  rabbitmq  
          # -  seq
          
    identity-service:
        image: localhost:5000/identity-service:latest
        build:
          context: .
          dockerfile: ./backend/src/Megarender.AppServices/Megarender.IdentityService/Dockerfile        
        container_name: identity-service
        restart: unless-stopped
        expose:
          - 80
        environment: 
          DB_HOST: "db"
          DB_PORT: "5432"
          DB_USER_FILE: "~/secrets/IS_DB_USER"
          DB_PWD_FILE: "~/secrets/IS_DB_PASSWORD"
          RMQ_USER_FILE: "~/secrets/RMQ_USER"
          RMQ_PWD_FILE: "~/secrets/RMQ_PASSWORD"
          RMQ_HOST: "rabbitmq"
          RMQ_PORT: "5672"
          ASPNETCORE_ENVIRONMENT: "Development"
          Serilog__WriteTo__2__Args__serverUrl: "http://seq:5341"
        # depends_on:
        #   -  db  


    storage-service:
        image: localhost:5000/storage-service:latest
        build:
          context: .
          dockerfile: ./backend/src/Megarender.AppServices/Megarender.StorageService/Dockerfile        
        container_name: storage-service
        restart: unless-stopped
        expose:
          - 80
        environment: 
          DB_HOST: "db"
          DB_PORT: "5432"
          DB_USER_FILE: "~/secrets/STORAGE_DB_USER"
          DB_PWD_FILE: "~/secrets/STORAGE_DB_PASSWORD"
          ASPNETCORE_ENVIRONMENT: "Development"         
          SeqURL: "http://seq:5341"
          AZURE_STORAGE: "~/secrets/AZURE_STORAGE_CONNECTIONSTRING"
          PIS_HOST_EXT: "localhost"
          PIS_PORT_EXT: "5000"
          PIS_HOST: "identity-service"
          PIS_PORT: "80"
        depends_on:
          -  identity-service    


    db:
        image: localhost:5000/db:latest
        build:
          context: .
          dockerfile: ./third-party-images/DB
        volumes: 
          - pg_data:/var/lib/postgresql/data        
        ports: 
          - 5432:5432
        container_name: db
        restart: unless-stopped
        environment:
          PGDATA: "/var/lib/postgresql/data/pgdata"
          POSTGRES_PASSWORD_FILE: "~/secrets/DB_PASSWORD"
          POSTGRES_USER_FILE: "~/secrets/DB_USER"

    
    rabbitmq:
        build:
          context: .
          dockerfile: ./third-party-images/RabbitMQ
        container_name: rabbitmq
        restart: unless-stopped
        environment: 
          RABBITMQ_DEFAULT_USER_FILE: "~/secrets/RMQ_USER"
          RABBITMQ_DEFAULT_PASS_FILE: "~/secrets/RMQ_PASSWORD"
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:15672"]
          interval: 30s
          timeout: 10s
          retries: 5
        volumes:
            - rmq_etc:/etc/rabbitmq/
            - rmq_data:/var/lib/rabbitmq/
            - rmq_logs:/var/log/rabbitmq/
        expose:
          - 4369
          - 5671
          - 5672
          - 25672
          - 15671
        ports:            
            - 15672:15672
            - 5672:5672


    notification_worker:
        build:
          context: .
          dockerfile: ./backend/src/Megarender.AppServices/Megarender.WorkerServices/Megarender.NotificationWorkerService/Dockerfile        
        container_name: notification_worker
        restart: unless-stopped
        environment: 
          RMQ_USER_FILE: "~/secrets/RMQ_USER"
          RMQ_PWD_FILE: "~/secrets/RMQ_PASSWORD"
          RMQ_HOST: "rabbitmq"
          RMQ_PORT: "5672"
          DOTNET_ENVIRONMENT: "Production"
        # depends_on:    
        #   -  rabbitmq  
          

    # seq:
    #  image: datalust/seq
    #  container_name: seq
    #  restart: unless-stopped
    #  expose: 
    #   - 5341
    #  ports:
    #   - 5340:80
    #  environment: 
    #   ACCEPT_EULA: Y
    #  volumes: 
    #   - seq_data:/data


    # prometheus:
    #   image: prom/prometheus
    #   container_name: prometheus
    #   restart: unless-stopped
    #   ports:
    #     - 9090:9090
    #   volumes:
    #     - ./third-party-images/prometheus.yml:/etc/prometheus/prometheus.yml:ro


    # grafana: 
    #   image: grafana/grafana      
    #   environment:
    #     GF_SECURITY_ADMIN_PASSWORD: "~/secrets/GRAFANA_PASSWORD"
    #   container_name: grafana
    #   restart: unless-stopped
    #   ports:
    #     - 3000:3000
    #   volumes: 
    #     - grafana-storage:/var/lib/grafana grafana/grafana

    redis:
      image: redis:6.2.1-alpine
      container_name: redis
      ports:
        - 6379:6379
      environment:
        - REDIS_REPLICATION_MODE=master

    
    portal:
      image: localhost:5000/portal:latest
      build:
        context: .
        dockerfile: ./clients/portal/Dockerfile        
      container_name: portal
      restart: unless-stopped
      ports:
        - 8888:8080
      environment: 
        API_URI: "http://localhost:8000/api"        
      depends_on:        
        - identity-nginx
        - management-nginx   
        - storage-nginx
        
    management-nginx:
      build: 
        context: .
        dockerfile: ./backend/src/Megarender.AppServices/Megarender.ManagementService/nginx/Dockerfile
      container_name: management-nginx
      restart: unless-stopped
      ports:
        - 5002:8989
      depends_on: 
        - management-service
    

    identity-nginx:
      build: 
        context: .
        dockerfile: ./backend/src/Megarender.AppServices/Megarender.IdentityService/nginx/Dockerfile
      container_name: identity-nginx
      restart: unless-stopped
      ports:
        - 5000:8989
      depends_on: 
        - identity-service

    storage-nginx:
      build: 
        context: .
        dockerfile: ./backend/src/Megarender.AppServices/Megarender.StorageService/nginx/Dockerfile
      container_name: storage-nginx
      restart: unless-stopped
      ports:
        - 5004:8989
      depends_on: 
        - storage-service

    doc-portal:
      build: 
        context: .
        dockerfile: ./clients/doc-portal/Dockerfile
      container_name: doc-portal
      restart: unless-stopped
      environment: 
        API_URI: "http://localhost:8000/api"  
      ports:
        - 8889:8080
      depends_on: 
        - identity-nginx
        - management-nginx
        - storage-nginx

    reverse-proxy:
      build: 
        context: .
        dockerfile: ./third-party-images/reverse-proxy/Dockerfile
      container_name: reverse-proxy
      restart: unless-stopped
      ports:
        - 8000:8989
      depends_on: 
        - identity-nginx
        - management-nginx
        - storage-nginx
        - portal
        - doc-portal
      
  
volumes: 
  pg_data:
  rmq_etc:
  rmq_data:
  rmq_logs:
  # seq_data:
  # grafana-storage:


